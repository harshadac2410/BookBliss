{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Harshada Chaudhari\\\\OneDrive\\\\Desktop\\\\PROJECT_DAC\\\\FrontEnd\\\\bookbliss\\\\src\\\\Components\\\\Login.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { Form, Button, Alert } from 'react-bootstrap';\n\n// function Login() {\n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [error, setError] = useState('');\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     // Handle form submission\n//     if (email === '' || password === '') {\n//       setError('All fields are required.');\n//     } else {\n//       setError('');\n//       // Implement login logic here\n//       console.log('Login:', { email, password });\n//     }\n//   };\n\n//   return (\n//     <div className=\"container mt-4\">\n//       <h2>Login</h2>\n//       {error && <Alert variant=\"danger\">{error}</Alert>}\n//       <Form onSubmit={handleSubmit}>\n//         <Form.Group controlId=\"formBasicEmail\">\n//           <Form.Label>Email address</Form.Label>\n//           <Form.Control\n//             type=\"email\"\n//             placeholder=\"Enter email\"\n//             value={email}\n//             onChange={(e) => setEmail(e.target.value)}\n//           />\n//         </Form.Group>\n\n//         <Form.Group controlId=\"formBasicPassword\">\n//           <Form.Label>Password</Form.Label>\n//           <Form.Control\n//             type=\"password\"\n//             placeholder=\"Password\"\n//             value={password}\n//             onChange={(e) => setPassword(e.target.value)}\n//           />\n//         </Form.Group>\n\n//         <Button variant=\"primary\" type=\"submit\">\n//           Login\n//         </Button>\n//       </Form>\n//     </div>\n//   );\n// }\n\n// export default Login;\n// import React from 'react';\n// // import './style.css'; // Make sure this path is correct\n// // import './script.js'; // Note: JavaScript files are generally not imported this way in React\n\n// function Login() {\n//   return (\n//     <section className=\"login-form-container\" id=\"login\">\n//       {/* login form container */}\n//       <div className=\"login-form-container\">\n//         <form action=\"\">\n//           <input type=\"email\" className=\"box\" placeholder=\"enter your email\" />\n//           <input type=\"password\" className=\"box\" placeholder=\"enter your password\" />\n//           <input type=\"submit\" value=\"login now\" className=\"btn\" />\n//           <input type=\"checkbox\" id=\"remember\" />\n//           <label htmlFor=\"remember\">remember me</label>\n//           <p>\n//             forget password? <a href=\"Login.js\">click here</a>\n//           </p>\n//           <p>\n//             don't have an account? <a href=\"Signup.js\">register now</a>\n//           </p>\n//         </form>\n//       </div>\n//     </section>\n//   );\n// }\n\n// export default Login;\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport '../Components/CSS/Login.css'; // Import CSS for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const [formData, setFormData] = useState({\n    email: '',\n    password: ''\n  });\n  const [errors, setErrors] = useState({});\n  const [successMessage, setSuccessMessage] = useState('');\n  const [loginError, setLoginError] = useState('');\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const newErrors = {};\n    if (!formData.email) newErrors.email = 'Email is required';\n    if (!formData.password) newErrors.password = 'Password is required';\n    if (Object.keys(newErrors).length === 0) {\n      try {\n        const response = await axios.post('http://localhost:8080/user', {\n          // Adjust URL as needed\n          email: formData.email,\n          password: formData.password\n        });\n        if (response.status === 200) {\n          setSuccessMessage('Login successful!');\n          setLoginError('');\n          // Redirect or handle successful login\n        }\n      } catch (error) {\n        if (error.response) {\n          setLoginError(error.response.data.message || 'Invalid credentials');\n        } else if (error.request) {\n          setLoginError('No response from server');\n        } else {\n          setLoginError('An error occurred');\n        }\n      }\n    } else {\n      setErrors(newErrors);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), successMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"success\",\n      children: successMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 26\n    }, this), loginError && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: loginError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"login-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          name: \"email\",\n          value: formData.email,\n          onChange: handleChange,\n          placeholder: \"Enter your email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), errors.email && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error\",\n          children: errors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          name: \"password\",\n          value: formData.password,\n          onChange: handleChange,\n          placeholder: \"Enter your password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), errors.password && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error\",\n          children: errors.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"links\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/forgot-password\",\n          children: \"Forgot password?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"links\",\n        children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/signup\",\n          children: \"Register now\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 34\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"1RGOUSU1oM9i20vJQV3JuLdxziU=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Login","_s","formData","setFormData","email","password","errors","setErrors","successMessage","setSuccessMessage","loginError","setLoginError","handleChange","e","name","value","target","handleSubmit","preventDefault","newErrors","Object","keys","length","response","post","status","error","data","message","request","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","onChange","placeholder","href","_c","$RefreshReg$"],"sources":["C:/Users/Harshada Chaudhari/OneDrive/Desktop/PROJECT_DAC/FrontEnd/bookbliss/src/Components/Login.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import { Form, Button, Alert } from 'react-bootstrap';\r\n\r\n// function Login() {\r\n//   const [email, setEmail] = useState('');\r\n//   const [password, setPassword] = useState('');\r\n//   const [error, setError] = useState('');\r\n\r\n//   const handleSubmit = (e) => {\r\n//     e.preventDefault();\r\n//     // Handle form submission\r\n//     if (email === '' || password === '') {\r\n//       setError('All fields are required.');\r\n//     } else {\r\n//       setError('');\r\n//       // Implement login logic here\r\n//       console.log('Login:', { email, password });\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"container mt-4\">\r\n//       <h2>Login</h2>\r\n//       {error && <Alert variant=\"danger\">{error}</Alert>}\r\n//       <Form onSubmit={handleSubmit}>\r\n//         <Form.Group controlId=\"formBasicEmail\">\r\n//           <Form.Label>Email address</Form.Label>\r\n//           <Form.Control\r\n//             type=\"email\"\r\n//             placeholder=\"Enter email\"\r\n//             value={email}\r\n//             onChange={(e) => setEmail(e.target.value)}\r\n//           />\r\n//         </Form.Group>\r\n\r\n//         <Form.Group controlId=\"formBasicPassword\">\r\n//           <Form.Label>Password</Form.Label>\r\n//           <Form.Control\r\n//             type=\"password\"\r\n//             placeholder=\"Password\"\r\n//             value={password}\r\n//             onChange={(e) => setPassword(e.target.value)}\r\n//           />\r\n//         </Form.Group>\r\n\r\n//         <Button variant=\"primary\" type=\"submit\">\r\n//           Login\r\n//         </Button>\r\n//       </Form>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Login;\r\n// import React from 'react';\r\n// // import './style.css'; // Make sure this path is correct\r\n// // import './script.js'; // Note: JavaScript files are generally not imported this way in React\r\n\r\n// function Login() {\r\n//   return (\r\n//     <section className=\"login-form-container\" id=\"login\">\r\n//       {/* login form container */}\r\n//       <div className=\"login-form-container\">\r\n//         <form action=\"\">\r\n//           <input type=\"email\" className=\"box\" placeholder=\"enter your email\" />\r\n//           <input type=\"password\" className=\"box\" placeholder=\"enter your password\" />\r\n//           <input type=\"submit\" value=\"login now\" className=\"btn\" />\r\n//           <input type=\"checkbox\" id=\"remember\" />\r\n//           <label htmlFor=\"remember\">remember me</label>\r\n//           <p>\r\n//             forget password? <a href=\"Login.js\">click here</a>\r\n//           </p>\r\n//           <p>\r\n//             don't have an account? <a href=\"Signup.js\">register now</a>\r\n//           </p>\r\n//         </form>\r\n//       </div>\r\n//     </section>\r\n//   );\r\n// }\r\n\r\n// export default Login;\r\n\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport '../Components/CSS/Login.css'; // Import CSS for styling\r\n\r\nfunction Login() {\r\n  const [formData, setFormData] = useState({\r\n    email: '',\r\n    password: ''\r\n  });\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [successMessage, setSuccessMessage] = useState('');\r\n  const [loginError, setLoginError] = useState('');\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({\r\n      ...formData,\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const newErrors = {};\r\n    if (!formData.email) newErrors.email = 'Email is required';\r\n    if (!formData.password) newErrors.password = 'Password is required';\r\n\r\n    if (Object.keys(newErrors).length === 0) {\r\n      try {\r\n        const response = await axios.post('http://localhost:8080/user', { // Adjust URL as needed\r\n          email: formData.email,\r\n          password: formData.password\r\n        });\r\n\r\n        if (response.status === 200) {\r\n          setSuccessMessage('Login successful!');\r\n          setLoginError('');\r\n          // Redirect or handle successful login\r\n        }\r\n      } catch (error) {\r\n        if (error.response) {\r\n          setLoginError(error.response.data.message || 'Invalid credentials');\r\n        } else if (error.request) {\r\n          setLoginError('No response from server');\r\n        } else {\r\n          setLoginError('An error occurred');\r\n        }\r\n      }\r\n    } else {\r\n      setErrors(newErrors);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <h2>Login</h2>\r\n      {successMessage && <p className=\"success\">{successMessage}</p>}\r\n      {loginError && <p className=\"error\">{loginError}</p>}\r\n      <form onSubmit={handleSubmit} className=\"login-form\">\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"email\">Email</label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            name=\"email\"\r\n            value={formData.email}\r\n            onChange={handleChange}\r\n            placeholder=\"Enter your email\"\r\n          />\r\n          {errors.email && <span className=\"error\">{errors.email}</span>}\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"password\">Password</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            name=\"password\"\r\n            value={formData.password}\r\n            onChange={handleChange}\r\n            placeholder=\"Enter your password\"\r\n          />\r\n          {errors.password && <span className=\"error\">{errors.password}</span>}\r\n        </div>\r\n\r\n        <button type=\"submit\" className=\"btn\">Login</button>\r\n\r\n        <p className=\"links\">\r\n          <a href=\"/forgot-password\">Forgot password?</a>\r\n        </p>\r\n        <p className=\"links\">\r\n          Don't have an account? <a href=\"/signup\">Register now</a>\r\n        </p>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
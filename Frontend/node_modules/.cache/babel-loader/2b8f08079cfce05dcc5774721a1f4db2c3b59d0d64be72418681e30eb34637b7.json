{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Harshada Chaudhari\\\\OneDrive\\\\Desktop\\\\PROJECT_DAC\\\\FrontEnd\\\\bookbliss\\\\src\\\\Components\\\\Signup.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { Form, Button, Alert } from 'react-bootstrap';\n\n// function Signup() {\n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [confirmPassword, setConfirmPassword] = useState('');\n//   const [error, setError] = useState('');\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     // Handle form submission\n//     if (email === '' || password === '' || confirmPassword === '') {\n//       setError('All fields are required.');\n//     } else if (password !== confirmPassword) {\n//       setError('Passwords do not match.');\n//     } else {\n//       setError('');\n//       // Implement signup logic here\n//       console.log('Signup:', { email, password });\n//     }\n//   };\n\n//   return (\n//     <div className=\"container mt-4\">\n//       <h2>Signup</h2>\n//       {error && <Alert variant=\"danger\">{error}</Alert>}\n//       <Form onSubmit={handleSubmit}>\n//         <Form.Group controlId=\"formBasicEmail\">\n//           <Form.Label>Email address</Form.Label>\n//           <Form.Control\n//             type=\"email\"\n//             placeholder=\"Enter email\"\n//             value={email}\n//             onChange={(e) => setEmail(e.target.value)}\n//           />\n//         </Form.Group>\n\n//         <Form.Group controlId=\"formBasicPassword\">\n//           <Form.Label>Password</Form.Label>\n//           <Form.Control\n//             type=\"password\"\n//             placeholder=\"Password\"\n//             value={password}\n//             onChange={(e) => setPassword(e.target.value)}\n//           />\n//         </Form.Group>\n\n//         <Form.Group controlId=\"formBasicPasswordConfirm\">\n//           <Form.Label>Confirm Password</Form.Label>\n//           <Form.Control\n//             type=\"password\"\n//             placeholder=\"Confirm Password\"\n//             value={confirmPassword}\n//             onChange={(e) => setConfirmPassword(e.target.value)}\n//           />\n//         </Form.Group>\n\n//         <Button variant=\"primary\" type=\"submit\">\n//           Signup\n//         </Button>\n//       </Form>\n//     </div>\n//   );\n// }\n\n// export default Signup;\n\n// import React, { useState } from 'react';\n// import '../Components/CSS/Signup.css' // Import CSS for styling\n\n// function Signup() {\n//   const [formData, setFormData] = useState({\n//     firstName: '',\n//     lastName: '',\n//     email: '',\n//     address: '',\n//     password: '',\n//     confirmPassword: ''\n//   });\n\n//   const [errors, setErrors] = useState({});\n\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n//     setFormData({\n//       ...formData,\n//       [name]: value\n//     });\n//   };\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n\n//     const newErrors = {};\n//     if (!formData.firstName) newErrors.firstName = 'First name is required';\n//     if (!formData.lastName) newErrors.lastName = 'Last name is required';\n//     if (!formData.email) newErrors.email = 'Email is required';\n//     if (!formData.address) newErrors.address = 'Address is required';\n//     if (!formData.password) newErrors.password = 'Password is required';\n//     if (formData.password !== formData.confirmPassword) newErrors.confirmPassword = 'Passwords do not match';\n\n//     if (Object.keys(newErrors).length === 0) {\n//       // Submit the form data (you would typically make an API call here)\n//       console.log('Form submitted:', formData);\n//     } else {\n//       setErrors(newErrors);\n//     }\n//   };\n\n//   return (\n//     <div className=\"signup-container\">\n//       <h2>Sign Up</h2>\n//       <form onSubmit={handleSubmit} className=\"signup-form\">\n//         <div className=\"form-group\">\n//           <label htmlFor=\"firstName\">First Name</label>\n//           <input\n//             type=\"text\"\n//             id=\"firstName\"\n//             name=\"firstName\"\n//             value={formData.firstName}\n//             onChange={handleChange}\n//             placeholder=\"Enter your first name\"\n//           />\n//           {errors.firstName && <span className=\"error\">{errors.firstName}</span>}\n//         </div>\n\n//         <div className=\"form-group\">\n//           <label htmlFor=\"lastName\">Last Name</label>\n//           <input\n//             type=\"text\"\n//             id=\"lastName\"\n//             name=\"lastName\"\n//             value={formData.lastName}\n//             onChange={handleChange}\n//             placeholder=\"Enter your last name\"\n//           />\n//           {errors.lastName && <span className=\"error\">{errors.lastName}</span>}\n//         </div>\n\n//         <div className=\"form-group\">\n//           <label htmlFor=\"email\">Email</label>\n//           <input\n//             type=\"email\"\n//             id=\"email\"\n//             name=\"email\"\n//             value={formData.email}\n//             onChange={handleChange}\n//             placeholder=\"Enter your email\"\n//           />\n//           {errors.email && <span className=\"error\">{errors.email}</span>}\n//         </div>\n\n//         <div className=\"form-group\">\n//           <label htmlFor=\"address\">Address</label>\n//           <input\n//             type=\"text\"\n//             id=\"address\"\n//             name=\"address\"\n//             value={formData.address}\n//             onChange={handleChange}\n//             placeholder=\"Enter your address\"\n//           />\n//           {errors.address && <span className=\"error\">{errors.address}</span>}\n//         </div>\n\n//         <div className=\"form-group\">\n//           <label htmlFor=\"password\">Password</label>\n//           <input\n//             type=\"password\"\n//             id=\"password\"\n//             name=\"password\"\n//             value={formData.password}\n//             onChange={handleChange}\n//             placeholder=\"Enter your password\"\n//           />\n//           {errors.password && <span className=\"error\">{errors.password}</span>}\n//         </div>\n\n//         <div className=\"form-group\">\n//           <label htmlFor=\"confirmPassword\">Confirm Password</label>\n//           <input\n//             type=\"password\"\n//             id=\"confirmPassword\"\n//             name=\"confirmPassword\"\n//             value={formData.confirmPassword}\n//             onChange={handleChange}\n//             placeholder=\"Confirm your password\"\n//           />\n//           {errors.confirmPassword && <span className=\"error\">{errors.confirmPassword}</span>}\n//         </div>\n\n//         <button type=\"submit\" className=\"btn\">Sign Up</button>\n//       </form>\n//     </div>\n//   );\n// }\n\n// export default Signup;\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport '../Components/CSS/Signup.css'; // Import CSS for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Signup() {\n  _s();\n  const [formData, setFormData] = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    address: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const [errors, setErrors] = useState({});\n  const [successMessage, setSuccessMessage] = useState('');\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const newErrors = {};\n    if (!formData.firstName) newErrors.firstName = 'First name is required';\n    if (!formData.lastName) newErrors.lastName = 'Last name is required';\n    if (!formData.email) newErrors.email = 'Email is required';\n    if (!formData.address) newErrors.address = 'Address is required';\n    if (!formData.password) newErrors.password = 'Password is required';\n    if (formData.password !== formData.confirmPassword) newErrors.confirmPassword = 'Passwords do not match';\n    if (Object.keys(newErrors).length === 0) {\n      try {\n        const response = await axios.post('http://localhost:5000/adduser', {\n          // Adjust URL as needed\n          first_name: formData.firstName,\n          last_name: formData.lastName,\n          email_id: formData.email,\n          address: formData.address,\n          password: formData.password\n        });\n        if (response.status === 200) {\n          setSuccessMessage('User registered successfully!');\n          setFormData({\n            firstName: '',\n            lastName: '',\n            email: '',\n            address: '',\n            password: '',\n            confirmPassword: ''\n          });\n        }\n      } catch (error) {\n        if (error.response && error.response.data) {\n          setErrors({\n            ...errors,\n            server: error.response.data.message || 'Something went wrong'\n          });\n        } else {\n          setErrors({\n            ...errors,\n            server: 'Network error'\n          });\n        }\n      }\n    } else {\n      setErrors(newErrors);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signup-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }, this), successMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"success\",\n      children: successMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 26\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"signup-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"firstName\",\n          children: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"firstName\",\n          name: \"firstName\",\n          value: formData.firstName,\n          onChange: handleChange,\n          placeholder: \"Enter your first name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }, this), errors.firstName && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error\",\n          children: errors.firstName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 32\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"lastName\",\n          children: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"lastName\",\n          name: \"lastName\",\n          value: formData.lastName,\n          onChange: handleChange,\n          placeholder: \"Enter your last name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 11\n        }, this), errors.lastName && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error\",\n          children: errors.lastName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          name: \"email\",\n          value: formData.email,\n          onChange: handleChange,\n          placeholder: \"Enter your email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 11\n        }, this), errors.email && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error\",\n          children: errors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"address\",\n          children: \"Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"address\",\n          name: \"address\",\n          value: formData.address,\n          onChange: handleChange,\n          placeholder: \"Enter your address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 11\n        }, this), errors.address && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error\",\n          children: errors.address\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 30\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          name: \"password\",\n          value: formData.password,\n          onChange: handleChange,\n          placeholder: \"Enter your password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 11\n        }, this), errors.password && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error\",\n          children: errors.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"confirmPassword\",\n          children: \"Confirm Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"confirmPassword\",\n          name: \"confirmPassword\",\n          value: formData.confirmPassword,\n          onChange: handleChange,\n          placeholder: \"Confirm your password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 11\n        }, this), errors.confirmPassword && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error\",\n          children: errors.confirmPassword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 38\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 9\n      }, this), errors.server && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"error\",\n        children: errors.server\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 271,\n    columnNumber: 5\n  }, this);\n}\n_s(Signup, \"T3BWoNGoOOFbWylLBEmWD0b3Cbo=\");\n_c = Signup;\nexport default Signup;\nvar _c;\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Signup","_s","formData","setFormData","firstName","lastName","email","address","password","confirmPassword","errors","setErrors","successMessage","setSuccessMessage","handleChange","e","name","value","target","handleSubmit","preventDefault","newErrors","Object","keys","length","response","post","first_name","last_name","email_id","status","error","data","server","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","onChange","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/Harshada Chaudhari/OneDrive/Desktop/PROJECT_DAC/FrontEnd/bookbliss/src/Components/Signup.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import { Form, Button, Alert } from 'react-bootstrap';\r\n\r\n// function Signup() {\r\n//   const [email, setEmail] = useState('');\r\n//   const [password, setPassword] = useState('');\r\n//   const [confirmPassword, setConfirmPassword] = useState('');\r\n//   const [error, setError] = useState('');\r\n\r\n//   const handleSubmit = (e) => {\r\n//     e.preventDefault();\r\n//     // Handle form submission\r\n//     if (email === '' || password === '' || confirmPassword === '') {\r\n//       setError('All fields are required.');\r\n//     } else if (password !== confirmPassword) {\r\n//       setError('Passwords do not match.');\r\n//     } else {\r\n//       setError('');\r\n//       // Implement signup logic here\r\n//       console.log('Signup:', { email, password });\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"container mt-4\">\r\n//       <h2>Signup</h2>\r\n//       {error && <Alert variant=\"danger\">{error}</Alert>}\r\n//       <Form onSubmit={handleSubmit}>\r\n//         <Form.Group controlId=\"formBasicEmail\">\r\n//           <Form.Label>Email address</Form.Label>\r\n//           <Form.Control\r\n//             type=\"email\"\r\n//             placeholder=\"Enter email\"\r\n//             value={email}\r\n//             onChange={(e) => setEmail(e.target.value)}\r\n//           />\r\n//         </Form.Group>\r\n\r\n//         <Form.Group controlId=\"formBasicPassword\">\r\n//           <Form.Label>Password</Form.Label>\r\n//           <Form.Control\r\n//             type=\"password\"\r\n//             placeholder=\"Password\"\r\n//             value={password}\r\n//             onChange={(e) => setPassword(e.target.value)}\r\n//           />\r\n//         </Form.Group>\r\n\r\n//         <Form.Group controlId=\"formBasicPasswordConfirm\">\r\n//           <Form.Label>Confirm Password</Form.Label>\r\n//           <Form.Control\r\n//             type=\"password\"\r\n//             placeholder=\"Confirm Password\"\r\n//             value={confirmPassword}\r\n//             onChange={(e) => setConfirmPassword(e.target.value)}\r\n//           />\r\n//         </Form.Group>\r\n\r\n//         <Button variant=\"primary\" type=\"submit\">\r\n//           Signup\r\n//         </Button>\r\n//       </Form>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Signup;\r\n\r\n// import React, { useState } from 'react';\r\n// import '../Components/CSS/Signup.css' // Import CSS for styling\r\n\r\n// function Signup() {\r\n//   const [formData, setFormData] = useState({\r\n//     firstName: '',\r\n//     lastName: '',\r\n//     email: '',\r\n//     address: '',\r\n//     password: '',\r\n//     confirmPassword: ''\r\n//   });\r\n\r\n//   const [errors, setErrors] = useState({});\r\n\r\n//   const handleChange = (e) => {\r\n//     const { name, value } = e.target;\r\n//     setFormData({\r\n//       ...formData,\r\n//       [name]: value\r\n//     });\r\n//   };\r\n\r\n//   const handleSubmit = (e) => {\r\n//     e.preventDefault();\r\n\r\n//     const newErrors = {};\r\n//     if (!formData.firstName) newErrors.firstName = 'First name is required';\r\n//     if (!formData.lastName) newErrors.lastName = 'Last name is required';\r\n//     if (!formData.email) newErrors.email = 'Email is required';\r\n//     if (!formData.address) newErrors.address = 'Address is required';\r\n//     if (!formData.password) newErrors.password = 'Password is required';\r\n//     if (formData.password !== formData.confirmPassword) newErrors.confirmPassword = 'Passwords do not match';\r\n\r\n//     if (Object.keys(newErrors).length === 0) {\r\n//       // Submit the form data (you would typically make an API call here)\r\n//       console.log('Form submitted:', formData);\r\n//     } else {\r\n//       setErrors(newErrors);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"signup-container\">\r\n//       <h2>Sign Up</h2>\r\n//       <form onSubmit={handleSubmit} className=\"signup-form\">\r\n//         <div className=\"form-group\">\r\n//           <label htmlFor=\"firstName\">First Name</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             id=\"firstName\"\r\n//             name=\"firstName\"\r\n//             value={formData.firstName}\r\n//             onChange={handleChange}\r\n//             placeholder=\"Enter your first name\"\r\n//           />\r\n//           {errors.firstName && <span className=\"error\">{errors.firstName}</span>}\r\n//         </div>\r\n\r\n//         <div className=\"form-group\">\r\n//           <label htmlFor=\"lastName\">Last Name</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             id=\"lastName\"\r\n//             name=\"lastName\"\r\n//             value={formData.lastName}\r\n//             onChange={handleChange}\r\n//             placeholder=\"Enter your last name\"\r\n//           />\r\n//           {errors.lastName && <span className=\"error\">{errors.lastName}</span>}\r\n//         </div>\r\n\r\n//         <div className=\"form-group\">\r\n//           <label htmlFor=\"email\">Email</label>\r\n//           <input\r\n//             type=\"email\"\r\n//             id=\"email\"\r\n//             name=\"email\"\r\n//             value={formData.email}\r\n//             onChange={handleChange}\r\n//             placeholder=\"Enter your email\"\r\n//           />\r\n//           {errors.email && <span className=\"error\">{errors.email}</span>}\r\n//         </div>\r\n\r\n//         <div className=\"form-group\">\r\n//           <label htmlFor=\"address\">Address</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             id=\"address\"\r\n//             name=\"address\"\r\n//             value={formData.address}\r\n//             onChange={handleChange}\r\n//             placeholder=\"Enter your address\"\r\n//           />\r\n//           {errors.address && <span className=\"error\">{errors.address}</span>}\r\n//         </div>\r\n\r\n//         <div className=\"form-group\">\r\n//           <label htmlFor=\"password\">Password</label>\r\n//           <input\r\n//             type=\"password\"\r\n//             id=\"password\"\r\n//             name=\"password\"\r\n//             value={formData.password}\r\n//             onChange={handleChange}\r\n//             placeholder=\"Enter your password\"\r\n//           />\r\n//           {errors.password && <span className=\"error\">{errors.password}</span>}\r\n//         </div>\r\n\r\n//         <div className=\"form-group\">\r\n//           <label htmlFor=\"confirmPassword\">Confirm Password</label>\r\n//           <input\r\n//             type=\"password\"\r\n//             id=\"confirmPassword\"\r\n//             name=\"confirmPassword\"\r\n//             value={formData.confirmPassword}\r\n//             onChange={handleChange}\r\n//             placeholder=\"Confirm your password\"\r\n//           />\r\n//           {errors.confirmPassword && <span className=\"error\">{errors.confirmPassword}</span>}\r\n//         </div>\r\n\r\n//         <button type=\"submit\" className=\"btn\">Sign Up</button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Signup;\r\n\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport '../Components/CSS/Signup.css'; // Import CSS for styling\r\n\r\nfunction Signup() {\r\n  const [formData, setFormData] = useState({\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    address: '',\r\n    password: '',\r\n    confirmPassword: ''\r\n  });\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [successMessage, setSuccessMessage] = useState('');\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({\r\n      ...formData,\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const newErrors = {};\r\n    if (!formData.firstName) newErrors.firstName = 'First name is required';\r\n    if (!formData.lastName) newErrors.lastName = 'Last name is required';\r\n    if (!formData.email) newErrors.email = 'Email is required';\r\n    if (!formData.address) newErrors.address = 'Address is required';\r\n    if (!formData.password) newErrors.password = 'Password is required';\r\n    if (formData.password !== formData.confirmPassword) newErrors.confirmPassword = 'Passwords do not match';\r\n\r\n    if (Object.keys(newErrors).length === 0) {\r\n      try {\r\n        const response = await axios.post('http://localhost:5000/adduser', { // Adjust URL as needed\r\n          first_name: formData.firstName,\r\n          last_name: formData.lastName,\r\n          email_id: formData.email,\r\n          address: formData.address,\r\n          password: formData.password\r\n        });\r\n\r\n        if (response.status === 200) {\r\n          setSuccessMessage('User registered successfully!');\r\n          setFormData({\r\n            firstName: '',\r\n            lastName: '',\r\n            email: '',\r\n            address: '',\r\n            password: '',\r\n            confirmPassword: ''\r\n          });\r\n        }\r\n      } catch (error) {\r\n        if (error.response && error.response.data) {\r\n          setErrors({ ...errors, server: error.response.data.message || 'Something went wrong' });\r\n        } else {\r\n          setErrors({ ...errors, server: 'Network error' });\r\n        }\r\n      }\r\n    } else {\r\n      setErrors(newErrors);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"signup-container\">\r\n      <h2>Sign Up</h2>\r\n      {successMessage && <p className=\"success\">{successMessage}</p>}\r\n      <form onSubmit={handleSubmit} className=\"signup-form\">\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"firstName\">First Name</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"firstName\"\r\n            name=\"firstName\"\r\n            value={formData.firstName}\r\n            onChange={handleChange}\r\n            placeholder=\"Enter your first name\"\r\n          />\r\n          {errors.firstName && <span className=\"error\">{errors.firstName}</span>}\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"lastName\">Last Name</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"lastName\"\r\n            name=\"lastName\"\r\n            value={formData.lastName}\r\n            onChange={handleChange}\r\n            placeholder=\"Enter your last name\"\r\n          />\r\n          {errors.lastName && <span className=\"error\">{errors.lastName}</span>}\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"email\">Email</label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            name=\"email\"\r\n            value={formData.email}\r\n            onChange={handleChange}\r\n            placeholder=\"Enter your email\"\r\n          />\r\n          {errors.email && <span className=\"error\">{errors.email}</span>}\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"address\">Address</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"address\"\r\n            name=\"address\"\r\n            value={formData.address}\r\n            onChange={handleChange}\r\n            placeholder=\"Enter your address\"\r\n          />\r\n          {errors.address && <span className=\"error\">{errors.address}</span>}\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"password\">Password</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            name=\"password\"\r\n            value={formData.password}\r\n            onChange={handleChange}\r\n            placeholder=\"Enter your password\"\r\n          />\r\n          {errors.password && <span className=\"error\">{errors.password}</span>}\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"confirmPassword\">Confirm Password</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"confirmPassword\"\r\n            name=\"confirmPassword\"\r\n            value={formData.confirmPassword}\r\n            onChange={handleChange}\r\n            placeholder=\"Confirm your password\"\r\n          />\r\n          {errors.confirmPassword && <span className=\"error\">{errors.confirmPassword}</span>}\r\n        </div>\r\n\r\n        {errors.server && <span className=\"error\">{errors.server}</span>}\r\n\r\n        <button type=\"submit\" className=\"btn\">Sign Up</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Signup;\r\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,8BAA8B,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvC,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC;IACvCQ,SAAS,EAAE,EAAE;IACbC,QAAQ,EAAE,EAAE;IACZC,KAAK,EAAE,EAAE;IACTC,OAAO,EAAE,EAAE;IACXC,QAAQ,EAAE,EAAE;IACZC,eAAe,EAAE;EACnB,CAAC,CAAC;EAEF,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC,CAAC;EACxC,MAAM,CAACgB,cAAc,EAAEC,iBAAiB,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAExD,MAAMkB,YAAY,GAAIC,CAAC,IAAK;IAC1B,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChCf,WAAW,CAAC;MACV,GAAGD,QAAQ;MACX,CAACc,IAAI,GAAGC;IACV,CAAC,CAAC;EACJ,CAAC;EAED,MAAME,YAAY,GAAG,MAAOJ,CAAC,IAAK;IAChCA,CAAC,CAACK,cAAc,CAAC,CAAC;IAElB,MAAMC,SAAS,GAAG,CAAC,CAAC;IACpB,IAAI,CAACnB,QAAQ,CAACE,SAAS,EAAEiB,SAAS,CAACjB,SAAS,GAAG,wBAAwB;IACvE,IAAI,CAACF,QAAQ,CAACG,QAAQ,EAAEgB,SAAS,CAAChB,QAAQ,GAAG,uBAAuB;IACpE,IAAI,CAACH,QAAQ,CAACI,KAAK,EAAEe,SAAS,CAACf,KAAK,GAAG,mBAAmB;IAC1D,IAAI,CAACJ,QAAQ,CAACK,OAAO,EAAEc,SAAS,CAACd,OAAO,GAAG,qBAAqB;IAChE,IAAI,CAACL,QAAQ,CAACM,QAAQ,EAAEa,SAAS,CAACb,QAAQ,GAAG,sBAAsB;IACnE,IAAIN,QAAQ,CAACM,QAAQ,KAAKN,QAAQ,CAACO,eAAe,EAAEY,SAAS,CAACZ,eAAe,GAAG,wBAAwB;IAExG,IAAIa,MAAM,CAACC,IAAI,CAACF,SAAS,CAAC,CAACG,MAAM,KAAK,CAAC,EAAE;MACvC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAM5B,KAAK,CAAC6B,IAAI,CAAC,+BAA+B,EAAE;UAAE;UACnEC,UAAU,EAAEzB,QAAQ,CAACE,SAAS;UAC9BwB,SAAS,EAAE1B,QAAQ,CAACG,QAAQ;UAC5BwB,QAAQ,EAAE3B,QAAQ,CAACI,KAAK;UACxBC,OAAO,EAAEL,QAAQ,CAACK,OAAO;UACzBC,QAAQ,EAAEN,QAAQ,CAACM;QACrB,CAAC,CAAC;QAEF,IAAIiB,QAAQ,CAACK,MAAM,KAAK,GAAG,EAAE;UAC3BjB,iBAAiB,CAAC,+BAA+B,CAAC;UAClDV,WAAW,CAAC;YACVC,SAAS,EAAE,EAAE;YACbC,QAAQ,EAAE,EAAE;YACZC,KAAK,EAAE,EAAE;YACTC,OAAO,EAAE,EAAE;YACXC,QAAQ,EAAE,EAAE;YACZC,eAAe,EAAE;UACnB,CAAC,CAAC;QACJ;MACF,CAAC,CAAC,OAAOsB,KAAK,EAAE;QACd,IAAIA,KAAK,CAACN,QAAQ,IAAIM,KAAK,CAACN,QAAQ,CAACO,IAAI,EAAE;UACzCrB,SAAS,CAAC;YAAE,GAAGD,MAAM;YAAEuB,MAAM,EAAEF,KAAK,CAACN,QAAQ,CAACO,IAAI,CAACE,OAAO,IAAI;UAAuB,CAAC,CAAC;QACzF,CAAC,MAAM;UACLvB,SAAS,CAAC;YAAE,GAAGD,MAAM;YAAEuB,MAAM,EAAE;UAAgB,CAAC,CAAC;QACnD;MACF;IACF,CAAC,MAAM;MACLtB,SAAS,CAACU,SAAS,CAAC;IACtB;EACF,CAAC;EAED,oBACEtB,OAAA;IAAKoC,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAC/BrC,OAAA;MAAAqC,QAAA,EAAI;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACf5B,cAAc,iBAAIb,OAAA;MAAGoC,SAAS,EAAC,SAAS;MAAAC,QAAA,EAAExB;IAAc;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC9DzC,OAAA;MAAM0C,QAAQ,EAAEtB,YAAa;MAACgB,SAAS,EAAC,aAAa;MAAAC,QAAA,gBACnDrC,OAAA;QAAKoC,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACzBrC,OAAA;UAAO2C,OAAO,EAAC,WAAW;UAAAN,QAAA,EAAC;QAAU;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC7CzC,OAAA;UACE4C,IAAI,EAAC,MAAM;UACXC,EAAE,EAAC,WAAW;UACd5B,IAAI,EAAC,WAAW;UAChBC,KAAK,EAAEf,QAAQ,CAACE,SAAU;UAC1ByC,QAAQ,EAAE/B,YAAa;UACvBgC,WAAW,EAAC;QAAuB;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpC,CAAC,EACD9B,MAAM,CAACN,SAAS,iBAAIL,OAAA;UAAMoC,SAAS,EAAC,OAAO;UAAAC,QAAA,EAAE1B,MAAM,CAACN;QAAS;UAAAiC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnE,CAAC,eAENzC,OAAA;QAAKoC,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACzBrC,OAAA;UAAO2C,OAAO,EAAC,UAAU;UAAAN,QAAA,EAAC;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC3CzC,OAAA;UACE4C,IAAI,EAAC,MAAM;UACXC,EAAE,EAAC,UAAU;UACb5B,IAAI,EAAC,UAAU;UACfC,KAAK,EAAEf,QAAQ,CAACG,QAAS;UACzBwC,QAAQ,EAAE/B,YAAa;UACvBgC,WAAW,EAAC;QAAsB;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnC,CAAC,EACD9B,MAAM,CAACL,QAAQ,iBAAIN,OAAA;UAAMoC,SAAS,EAAC,OAAO;UAAAC,QAAA,EAAE1B,MAAM,CAACL;QAAQ;UAAAgC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjE,CAAC,eAENzC,OAAA;QAAKoC,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACzBrC,OAAA;UAAO2C,OAAO,EAAC,OAAO;UAAAN,QAAA,EAAC;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACpCzC,OAAA;UACE4C,IAAI,EAAC,OAAO;UACZC,EAAE,EAAC,OAAO;UACV5B,IAAI,EAAC,OAAO;UACZC,KAAK,EAAEf,QAAQ,CAACI,KAAM;UACtBuC,QAAQ,EAAE/B,YAAa;UACvBgC,WAAW,EAAC;QAAkB;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/B,CAAC,EACD9B,MAAM,CAACJ,KAAK,iBAAIP,OAAA;UAAMoC,SAAS,EAAC,OAAO;UAAAC,QAAA,EAAE1B,MAAM,CAACJ;QAAK;UAAA+B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3D,CAAC,eAENzC,OAAA;QAAKoC,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACzBrC,OAAA;UAAO2C,OAAO,EAAC,SAAS;UAAAN,QAAA,EAAC;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACxCzC,OAAA;UACE4C,IAAI,EAAC,MAAM;UACXC,EAAE,EAAC,SAAS;UACZ5B,IAAI,EAAC,SAAS;UACdC,KAAK,EAAEf,QAAQ,CAACK,OAAQ;UACxBsC,QAAQ,EAAE/B,YAAa;UACvBgC,WAAW,EAAC;QAAoB;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjC,CAAC,EACD9B,MAAM,CAACH,OAAO,iBAAIR,OAAA;UAAMoC,SAAS,EAAC,OAAO;UAAAC,QAAA,EAAE1B,MAAM,CAACH;QAAO;UAAA8B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/D,CAAC,eAENzC,OAAA;QAAKoC,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACzBrC,OAAA;UAAO2C,OAAO,EAAC,UAAU;UAAAN,QAAA,EAAC;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC1CzC,OAAA;UACE4C,IAAI,EAAC,UAAU;UACfC,EAAE,EAAC,UAAU;UACb5B,IAAI,EAAC,UAAU;UACfC,KAAK,EAAEf,QAAQ,CAACM,QAAS;UACzBqC,QAAQ,EAAE/B,YAAa;UACvBgC,WAAW,EAAC;QAAqB;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClC,CAAC,EACD9B,MAAM,CAACF,QAAQ,iBAAIT,OAAA;UAAMoC,SAAS,EAAC,OAAO;UAAAC,QAAA,EAAE1B,MAAM,CAACF;QAAQ;UAAA6B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjE,CAAC,eAENzC,OAAA;QAAKoC,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACzBrC,OAAA;UAAO2C,OAAO,EAAC,iBAAiB;UAAAN,QAAA,EAAC;QAAgB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACzDzC,OAAA;UACE4C,IAAI,EAAC,UAAU;UACfC,EAAE,EAAC,iBAAiB;UACpB5B,IAAI,EAAC,iBAAiB;UACtBC,KAAK,EAAEf,QAAQ,CAACO,eAAgB;UAChCoC,QAAQ,EAAE/B,YAAa;UACvBgC,WAAW,EAAC;QAAuB;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpC,CAAC,EACD9B,MAAM,CAACD,eAAe,iBAAIV,OAAA;UAAMoC,SAAS,EAAC,OAAO;UAAAC,QAAA,EAAE1B,MAAM,CAACD;QAAe;UAAA4B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/E,CAAC,EAEL9B,MAAM,CAACuB,MAAM,iBAAIlC,OAAA;QAAMoC,SAAS,EAAC,OAAO;QAAAC,QAAA,EAAE1B,MAAM,CAACuB;MAAM;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAEhEzC,OAAA;QAAQ4C,IAAI,EAAC,QAAQ;QAACR,SAAS,EAAC,KAAK;QAAAC,QAAA,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAACvC,EAAA,CA1JQD,MAAM;AAAA+C,EAAA,GAAN/C,MAAM;AA4Jf,eAAeA,MAAM;AAAC,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}